/*
 * Copyright (c) 2020 by Delphix. All rights reserved.
*/
buildscript {
    repositories {
        mavenCentral()
        mavenLocal()
    }
    dependencies {
        classpath files("${project.rootDir}/libs/masking-algorithm-api-${maskingAlgoVer}.jar")
        classpath files("${project.rootDir}/libs/semantic-version-${semanticVer}.jar")
        classpath files("${project.rootDir}/libs/javapasswordsdk.jar")
        classpath files("${project.rootDir}/libs/junit-jupiter-api-5.12.0.jar")
        classpath files("${project.rootDir}/libs/junit-jupiter-engine-5.12.0.jar")
        classpath files("${project.rootDir}/libs/mockito-core-5.16.0.jar")
    }
}

apply plugin: 'java'

repositories {
    mavenCentral()
    mavenLocal()
}


jar {
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    includeEmptyDirs = false

    manifest {
        attributes(
                'Build-Timestamp': new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ").format(new Date()),
                'Created-By'     : "Gradle ${gradle.gradleVersion}",
                'Build-Jdk'      : "${System.properties['java.version']} (${System.properties['java.vendor']} ${System.properties['java.vm.version']})",
                'Build-OS'       : "${System.properties['os.name']} ${System.properties['os.arch']} ${System.properties['os.version']}",
        )
    }
}

sourceCompatibility = '17'

dependencies {
    compileOnly fileTree(dir: "${project.rootDir}/libs", include: '*.jar')
    implementation files("${project.rootDir}/libs/javapasswordsdk.jar")
<<<<<<< HEAD
    compileOnly ('com.fasterxml.jackson.core:jackson-annotations:' + jacksonVer)
=======
    testImplementation files("${project.rootDir}/libs/masking-algorithm-api-${maskingAlgoVer}.jar")
    testImplementation files("${project.rootDir}/libs/junit-jupiter-api-5.12.0.jar")
    testImplementation files("${project.rootDir}/libs/mockito-core-5.16.0.jar")
    testImplementation files("${project.rootDir}/libs/junit-jupiter-engine-5.12.0.jar")
    testRuntimeOnly files("${project.rootDir}/libs/masking-algorithm-api-${maskingAlgoVer}.jar")
    testRuntimeOnly files("${project.rootDir}/libs/junit-jupiter-api-5.12.0.jar")
    testRuntimeOnly files("${project.rootDir}/libs/mockito-core-5.16.0.jar")
    testRuntimeOnly files("${project.rootDir}/libs/junit-jupiter-engine-5.12.0.jar")
    testImplementation 'org.junit.platform:junit-platform-launcher:1.12.0'
    testImplementation 'net.bytebuddy:byte-buddy-agent:1.17.2'
>>>>>>> @{-1}
}


tasks.test {
    useJUnitPlatform()  // Explicitly tell Gradle to use JUnit 5
}